[
    {
        "name": "Basic Inline Code",
        "text": "`inline_code();`",
        "formats": {
            "md": "`inline_code();`",
            "html": "<p><code>inline_code();</code></p>",
            "tex": "\\verb|inline_code();|",
            "text": "",
            "json": {
                "type": "paragraph",
                "children": [
                    {
                        "type": "inline",
                        "children": [
                            {
                                "type": "code_inline",
                                "text": "inline_code();"
                            }
                        ]
                    }
                ]
            }
        }
    },

    {
        "name": "Mid-Text Inline Code",
        "text": "Inline `code()`.",
        "formats": {
            "md": "Inline `code()`.",
            "html": "<p>Inline <code>code()</code>.</p>",
            "tex": "Inline \\verb|code()|.",
            "text": "Inline",
            "json": {
                "type": "paragraph",
                "children": [
                    {
                        "type": "inline",
                        "children": [
                            {
                                "type": "text",
                                "text": "Inline "
                            },
                            {
                                "type": "code_inline",
                                "text": "code()"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        }
    },

    {
        "name": "Inline Code with Escapes",
        "text": "`inline_code(\"\\*\");`",
        "formats": {
            "md": "`inline_code(\"\\*\");`",
            "html": "<p><code>inline_code(\"\\*\");</code></p>",
            "tex": "\\verb|inline_code(\"\\*\");|",
            "text": "",
            "json": {
                "type": "paragraph",
                "children": [
                    {
                        "type": "inline",
                        "children": [
                            {
                                "type": "code_inline",
                                "text": "inline_code(\"\\*\");"
                            }
                        ]
                    }
                ]
            }
        }
    },

    {
        "name": "Inline Code with Un-Escapes",
        "text": "`inline_code(\"*\");`",
        "formats": {
            "md": "`inline_code(\"*\");`",
            "html": "<p><code>inline_code(\"*\");</code></p>",
            "tex": "\\verb|inline_code(\"*\");|",
            "text": "",
            "json": {
                "type": "paragraph",
                "children": [
                    {
                        "type": "inline",
                        "children": [
                            {
                                "type": "code_inline",
                                "text": "inline_code(\"*\");"
                            }
                        ]
                    }
                ]
            }
        }
    },

    {
        "name": "Inline Code with Alt Verb Delim",
        "text": "`inline_code(\"|\");`",
        "formats": {
            "md": "`inline_code(\"|\");`",
            "html": "<p><code>inline_code(\"|\");</code></p>",
            "tex": "\\verb!inline_code(\"|\");!",
            "text": "",
            "json": {
                "type": "paragraph",
                "children": [
                    {
                        "type": "inline",
                        "children": [
                            {
                                "type": "code_inline",
                                "text": "inline_code(\"|\");"
                            }
                        ]
                    }
                ]
            }
        }
    },

    {
        "name": "Basic Code Block",
        "text": "```\ncode_block();\n```",
        "formats": {
            "md": "```\ncode_block();\n```",
            "html": "<pre><code>code_block();\n</code></pre>",
            "tex": "\\begin{lstlisting}\ncode_block();\n\\end{lstlisting}",
            "text": "",
            "json": {
                "type": "fence",
                "text": "code_block();\n"
            }
        }
    },

    {
        "name": "Code Block with Inner Whitespace",
        "text": "```\n code_block(); \n```",
        "formats": {
            "md": "```\n code_block(); \n```",
            "html": "<pre><code> code_block(); \n</code></pre>",
            "tex": "\\begin{lstlisting}\n code_block();\n\\end{lstlisting}",
            "text": "",
            "json": {
                "type": "fence",
                "text": " code_block(); \n"
            }
        }
    },

    {
        "name": "Code Block with Info String",
        "text": "```golang\ncode_block();\n```",
        "formats": {
            "md": "```golang\ncode_block();\n```",
            "html": "<pre><code class='language-golang'>code_block();\n</code></pre>",
            "tex": "\\begin{lstlisting}[language=golang]\ncode_block();\n\\end{lstlisting}",
            "text": "",
            "json": {
                "type": "fence",
                "info": "golang",
                "text": "code_block();\n"
            }
        }
    },

    {
        "name": "Indented Code Block",
        "comment": "Because of stripping, we need a paragraph before the indented block.",
        "text": "a\n\n    code_block();",
        "formats": {
            "md": "a\n\n```\ncode_block();\n```",
            "html": "<p>a</p><pre><code>code_block();\n</code></pre>",
            "tex": "a\n\n\\begin{lstlisting}\ncode_block();\n\\end{lstlisting}",
            "text": "a",
            "json": [
                {
                    "type": "paragraph",
                    "children": [
                        {
                            "type": "inline",
                            "children": [
                                {
                                    "type": "text",
                                    "text": "a"
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "code_block",
                    "text": "code_block();\n"
                }
            ]
        }
    }

]
